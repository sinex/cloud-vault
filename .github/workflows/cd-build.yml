name: Build
on:
  push:
    branches:
      - master
  workflow_call:
    outputs:
      tree_sha:
        description: "git Tree SHA for the current commit"
        value: ${{ jobs.calculated_values.outputs.tree_sha }}

jobs:

  calculated_values:
    name: Calculated values for other jobs
    runs-on: ubuntu-latest
    outputs:
      tree_sha: ${{ steps.tree_sha.outputs.value }}
    steps:
      - uses: actions/checkout@v3
      - id: tree_sha
        run: echo "::set-output name=value::$(git rev-parse HEAD:)"

  clean:
    name: Delete old packages
    runs-on: ubuntu-latest
    steps:

      - uses: camargo/delete-untagged-action@v1
        with:
          github-token: ${{ secrets.DELETE_PACKAGES_TOKEN }}
          package-name: vault_caddy
          personal-account: true

      - uses: camargo/delete-untagged-action@v1
        with:
          github-token: ${{ secrets.DELETE_PACKAGES_TOKEN }}
          package-name: vault_borg
          personal-account: true

      - uses: snok/container-retention-policy@v1
        with:
          image-names: vault_borg, vault_caddy
          cut-off: 1 day ago UTC
          timestamp-to-use: updated_at
          account-type: personal
          keep-at-least: 5
          skip-tags: latest
          token: ${{ secrets.DELETE_PACKAGES_TOKEN }}

  build:
    name: Build and Push
    runs-on: ubuntu-latest
    needs:
      - clean
      - calculated_values
    strategy:
      matrix:
        image: [caddy, borg]

    steps:
      - uses: docker/setup-buildx-action@v2

      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/build-push-action@v3
        with:
          push: true
          context: "{{defaultContext}}:images/${{ matrix.image }}"
          tags: |
            ghcr.io/sinex/vault_${{ matrix.image }}:latest
            ghcr.io/sinex/vault_${{ matrix.image }}:${{ needs.calculated_values.outputs.tree_sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
