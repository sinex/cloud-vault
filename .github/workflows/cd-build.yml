name: Deploy
on:
  push:
    branches:
      - master
      - deploy
      - 'deploy-*'

jobs:

  calculated_values:
    name: Calculate values for other jobs
    runs-on: ubuntu-latest
    outputs:
      tree_sha: ${{ steps.tree.outputs.value }}
    steps:
      - uses: actions/checkout@v3
      - id: tree
        run: echo "::set-output name=value::$(git rev-parse HEAD:)"

  clean:
    name: Delete old packages
    runs-on: ubuntu-latest
    steps:
      - uses: snok/container-retention-policy@v1
        with:
          image-names: vault_borg, vault_caddy
          cut-off: 1 week ago UTC
          timestamp-to-use: updated_at
          account-type: personal
          keep-at-least: 5
          skip-tags: latest
          token: ${{ secrets.DELETE_PACKAGES_TOKEN }}

  build:
    name: Build and Push
    runs-on: ubuntu-latest
    needs: calculated_values
    strategy:
      matrix:
        image: [caddy, borg]

    steps:
      - uses: docker/setup-buildx-action@v2

      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/build-push-action@v3
        with:
          push: true
          context: "{{defaultContext}}:images/${{ matrix.image }}"
          tags: |
            ghcr.io/sinex/vault_${{ matrix.image }}:latest
            ghcr.io/sinex/vault_${{ matrix.image }}:${{ needs.calculated_values.outputs.tree_sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs:
      - calculated_values
      - build
    if: startsWith(github.ref, 'refs/heads/deploy')
    env:
      IMAGE_TAG: ${{ needs.calculated_values.outputs.tree_sha }}
      VAULT_HOSTNAME: ${{ secrets.VAULT_HOSTNAME }}
      VAULT_DOMAIN: ${{ secrets.VAULT_DOMAIN }}
      VAULT_ADMIN_EMAIL: ${{ secrets.VAULT_ADMIN_EMAIL }}
      VAULT_ORG_NAME: ${{ secrets.VAULT_ORG_NAME }}
      VAULT_SMTP_HOST: ${{ secrets.VAULT_SMTP_HOST }}
      VAULT_SMTP_USERNAME: ${{ secrets.VAULT_SMTP_USERNAME }}
      VAULT_SMTP_PASSWORD: ${{ secrets.VAULT_SMTP_PASSWORD }}
      BORG_REPO: ${{ secrets.BORG_REPO }}
      BORG_PASSPHRASE: ${{ secrets.BORG_PASSPHRASE }}
      BORG_SSH_PRIVATE_KEY: ${{ secrets.BORG_SSH_PRIVATE_KEY }}
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      CLOUDFLARE_ZONE_ID: ${{ secrets.CLOUDFLARE_ZONE_ID }}

    steps:
      - uses: actions/checkout@v3

      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: ./.github/actions/docker-compose-deploy
        with:
          ssh_user: ${{ secrets.DEPLOYER_USERNAME }}
          ssh_host:  ${{ secrets.VAULT_HOSTNAME }}.${{ secrets.VAULT_DOMAIN }}
          ssh_key: ${{ secrets.SSH_KEY }}
          stack_name: vault
          docker_registry: ghcr.io
          docker_username: ${{ github.repository_owner }}
          docker_password: ${{ secrets.GITHUB_TOKEN }}
