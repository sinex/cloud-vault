- name: "Storage: Calculate LVM volume names"
  tags:
    - storage
    - debug
  set_fact:
    lvm_volumes: "{{
      lvm_volumes | default([]) + [
        item | combine({
          'lvm_name': item.target | regex_replace('/', '_') | regex_replace('^_')
        })
      ]
    }}"
  loop: "{{ block_volume_mounts }}"


- name: "Storage: Create partition block volume"
  tags:
    - storage
  community.general.system.parted:
    device: "{{ block_volume_device }}"
    label: gpt
    number: 1
    state: present


- name: "Storage: Create LUKS container"
  tags:
    - storage
  community.crypto.luks_device:
    device: "{{block_volume_device }}1"
    state: opened
    name: block_volume_crypt
    passphrase: "{{ block_volume_luks_password }}"


- name: Create LVM Group
  tags:
    - storage
  community.general.system.lvg:
    vg: block_volume
    pvs: /dev/mapper/block_volume_crypt


- name: "Storage: Read LVM device information"
  tags:
    - storage
  community.general.system.parted: device=/dev/mapper/block_volume_crypt unit=MiB
  register: lvm_info


- name: "Storage: Create LVM volumes"
  tags:
    - storage
  community.general.system.lvol:
    vg: block_volume
    lv: "{{ item.lvm_name }}"
    size: "{{ item.size }}"
  loop: "{{ lvm_volumes }}"


- name: "Storage: Format LVM volumes"
  tags:
    - storage
  community.general.system.filesystem:
    dev: "/dev/mapper/block_volume-{{ item.lvm_name }}"
    fstype: "{{ block_volume_filesystem }}"
  loop: "{{ lvm_volumes }}"


- name: "Storage: Mount Block Volume partitions"
  tags:
    - storage
  ansible.posix.mount:
    src: "/dev/mapper/block_volume-{{ item.lvm_name }}"
    path: "{{ item.target }}"
    fstype: "{{ block_volume_filesystem }}"
    state: mounted
  loop: "{{ lvm_volumes }}"
