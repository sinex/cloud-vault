- name: Configure
  hosts: vault
  become: yes
  tasks:
    - name: OS-specific configuration
      include_tasks: "configure.{{ ansible_facts['os_family'] | lower }}.yml"

    - name: Upgrade packages
      package:
        name: '*'
        state: latest

    - name: Install required packages
      package:
        state: present
        name:
          - docker-ce
          - docker-ce-cli
          - python3-docker
          - fail2ban

    - name: Enable docker service
      systemd:
        daemon_reload: yes
        name: docker
        state: started
        enabled: yes

    - name: Initialise docker swarm
      community.docker.docker_swarm:
        state: present

    - name: Configure docker secrets (vars)
      community.docker.docker_secret:
        name: "{{ item }}"
        data: "{{ lookup('vars', '{{ item }}') }}"
        state: present
      loop:
        - BORG_REPO
        - BORG_PASSPHRASE
        - BORG_SSH_PRIVATE_KEY
        - VAULTWARDEN_ENV

    - name: Configure docker secrets (file)
      community.docker.docker_secret:
        name: "{{ item.name }}"
        data: "{{ lookup('file', '{{ item.file }}') | b64encode }}"
        data_is_b64: true
        state: present
      loop:
        - { name: "VAULTWARDEN_SECRET_ENV", file: "../../vaultwarden.env" }


    - name: Configure SSH server daemon
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: "^(# *)?{{ item.key }} \\w+$"
        line: "{{ item.key }} {{ item.value }}"
        state: present
      loop:
        - {key: "PermitRootLogin", value: "no"}
        - {key: "MaxSessions", value: "500"}
        - {key: "PasswordAuthentication", value: "no"}
        - {key: "X11Forwarding", value: "no"}
        - {key: "AllowGroups", value: "ssh_users"}
      notify:
        - Restart sshd


    - name: Enable fail2ban
      systemd:
        daemon_reload: yes
        name: fail2ban
        state: started
        enabled: yes


    - name: Configure fail2ban
      copy:
        src: "files/fail2ban/{{ item.src }}"
        dest: "/etc/fail2ban/{{ item.dest }}"
        owner: root
        group: root
        mode: '0640'
      loop:
        - {src: "vaultwarden-web.filter.conf", dest: "filter.d/vaultwarden-web.local"}
        - {src: "vaultwarden-web.jail.conf", dest: "jail.d/vaultwarden-web.local"}
        - {src: "vaultwarden-admin.filter.conf", dest: "filter.d/vaultwarden-admin.local"}
        - {src: "vaultwarden-admin.jail.conf", dest: "jail.d/vaultwarden-admin.local"}
      notify:
        - Restart fail2ban

    - name: Install fail2ban CloudFlare action
      tags:
        - debug
      template:
        src: files/fail2ban/cloudflare.action.conf
        dest: /etc/fail2ban/action.d/cloudflare.conf
        owner: root
        group: root
        mode: '0640'
      notify:
        - Restart fail2ban


    - name: Create vaultwarden.log
      copy:
        content: ""
        dest: /var/log/vaultwarden.log
        force: no
        user: root
        group: root
        mode: '0640'


    - name: Configure logrotate
      copy:
        src: files/logrotate/vaultwarden.conf
        dest: /etc/logrotate.d/vaultwarden
        owner: root
        group: root
        mode: '0640'
        validate: /usr/sbin/logrotate -vf %s
      notify:
        - Restart rsyslog


    - name: Update MOTD
      lineinfile:
        path: /etc/motd
        line: "Configured by ansible."
        state: present


  handlers:
    - name: Restart sshd
      systemd:
        state: restarted
        name: sshd

    - name: Restart fail2ban
      systemd:
        name: fail2ban
        state: restarted

    - name: Restart rsyslog
      systemd:
        name: rsyslog
        state: restarted

